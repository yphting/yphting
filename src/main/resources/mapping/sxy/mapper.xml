<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace:接口完整限定名 -->
<mapper namespace="com.accp.dao.sxy.IForumDao">
	<!-- 动态加载板块 -->
	<select id="queryBlock" resultType="Forummanagement">
		SELECT * FROM forummanagement
		WHERE pid = 0
	</select>
	<select id="queryColumn" resultType="Forummanagement">
		select * from
		`forummanagement` where pid = #{pid}
	</select>
	<select id="queryTitleName" resultType="Forummanagement">
		select * from
		forummanagement where fmid=#{fmid}
	</select>
	<!-- 动态加载板块结束 -->

	<!-- 显示帖子列表映射map -->
	<resultMap type="com.accp.vo.sxy.PostcommentVo"
		id="SimplePostcommentVoMap">
		<association property="user" column="commentator"
			select="queryUserById"></association>
	</resultMap>
	<resultMap type="com.accp.vo.sxy.PostcommentVo"
		id="PostcommentVoMap">
		<association property="user" column="commentator"
			select="queryUserById"></association>
		<association property="pc" column="pid"
			select="queryCommentPid"></association>
	</resultMap>
	<resultMap type="com.accp.vo.sxy.PostVo" id="PostVoMap">
		<result property="postid" column="postID" />
		<association property="user" column="userid"
			select="queryUserById"></association>
		<association property="forum" column="fmid"
			select="queryForumByFmid"></association>
		<association property="lastcomment" column="postid"
			select="queryLastcommentByPostid"></association>
		<association property="count" column="postid"
			select="queryCountByPostid"></association>
	</resultMap>
	<!-- 发帖人 -->
	<select id="queryUserById" resultType="user">
		select * from user where
		userid=#{0}
	</select>
	<!-- 栏目所属 -->
	<select id="queryForumByFmid" resultType="forummanagement">
		select * from
		forummanagement where fmid=#{0}
	</select>
	<!-- 查询最后回复人 -->
	<select id="queryLastcommentByPostid"
		resultMap="PostcommentVoMap">
		select * from postcomment where postid=#{0} order by
		reviewtime desc limit 0,1
	</select>


	<!-- 查询评论帖子 -->
	<select id="queryCommentPid" resultMap="SimplePostcommentVoMap">
		select * from postcomment
		where pcid=#{0}
	</select>


	<!-- 查询评论数 -->
	<select id="queryCountByPostid" resultType="java.lang.Integer">
		select count(1) from
		postcomment where postid=#{0}
	</select>
	<!-- 查询帖子列表 -->
	<select id="queryPostList" resultMap="PostVoMap">
		select *,(select max(reviewtime) from postcomment p where
		p.postId=po.postId)lasttime
		from post po
		where fmid in (select fmid from
		forummanagement where pid=#{pid})
		<if test="title!=null">
			and title like '%${title}%'
		</if>
		<if test="forumid!=null">
			and fmid = #{forumid}
		</if>
		<if test="essence!=0">
			and essence = #{essence}
		</if>
		<if test="orderId=0">
			order by solid desc,releasetime desc
		</if>
		<if test="orderId=1">
			order by solid desc,essence desc,lasttime desc,releasetime
			desc
		</if>
	</select>
	<!-- 显示帖子列表结束 -->

	<!-- 显示热门帖子 -->
	<select id="queryHotPost" resultMap="PostVoMap">
		SELECT *,(SELECT MAX(reviewtime) FROM postcomment p WHERE
		p.postId=po.postId)lasttime,(SELECT COUNT(1)FROM postcomment p WHERE
		p.postId=po.postId GROUP BY postId) cocount
		FROM post po
		<if test="title!=null">
			where title like '%${title}%'
		</if>
		ORDER BY solid DESC,essence DESC,cocount DESC
	</select>

	<!-- 发布帖子 -->
	<insert id="savePost">
		insert into
		post(`userID`,`fmID`,`title`,`content`,`releaseTime`)
		values(#{post.userid},#{post.fmid},#{post.title},#{post.content},#{post.releasetime})
	</insert>

	<!-- 验证用户在当天发帖数 -->
	<select id="checkPostCount" resultType="java.lang.Integer">
		SELECT COUNT(*) FROM post
		WHERE TO_DAYS(`releasetime`) = TO_DAYS(NOW())
		AND userId = #{userId}
	</select>
	<!-- 每前3次发帖增加5积分 -->
	<update id="updateJIntegral">
		update user set userIntegral = userIntegral+5
		where
		userId = #{userId}
	</update>
	<!-- 查询帖子详情 -->
	<select id="queryPostDetail" resultMap="PostVoMap">
		update post set
		browsenumber = browsenumber+1 where postId = #{postId};
		select
		*,(select max(reviewtime) from postcomment p where
		p.postId=po.postId)lasttime
		from post po
		where postId = #{postId}
	</select>

	<!-- 查询帖子详情内评论列表 -->
	<select id="queryComment" resultMap="PostcommentVoMap">
		select * from postcomment
		where postId = #{postId}
		order by reviewtime desc
	</select>

	<!-- 查询帖子详情右侧最新话题 -->
	<select id="queryNewPost" resultMap="PostVoMap">
		select *
		from post po
		where
		fmid = #{fmid}
		order by releasetime desc
		limit 0,3
	</select>

	<!-- 查询我的韩汀论坛中我的发帖 -->
	<select id="queryMyPost" resultMap="PostVoMap">
		SELECT *,(SELECT MAX(reviewtime) FROM postcomment p WHERE
		p.postId=po.postId)lasttime
		FROM post po
		WHERE userId = #{userId}
		<if test="title!=null">
			and title like '%${title}%'
		</if>
		ORDER BY releasetime DESC
	</select>
	<!-- 查询我的韩汀论坛中我的回复 -->
	<select id="queryMyComment" resultMap="PostVoMap">
		SELECT * FROM post
		WHERE postId IN (SELECT postId FROM postcomment
		WHERE commentator =
		#{userId})
		<if test="title!=null">
			and title like '%${title}%'
		</if>
	</select>
	<!-- 查询我的韩汀论坛中我的收藏 -->
	<select id="queryMyCollection" resultMap="PostVoMap">
		SELECT * FROM post
		WHERE postId IN (SELECT postId FROM postfabulous
		WHERE userId =
		#{userId})
		<if test="title!=null">
			and title like '%${title}%'
		</if>
	</select>
	<!-- 验证是否重复收藏 -->
	<select id="checkHasCollection" resultType="java.lang.Integer">
		select count(1) from
		postcollection
		where pcId = #{postId} and userId = #{userId}
	</select>
	<!-- 验证是否收藏或点赞自己帖子 -->
	<select id="checkIsSelf" resultType="java.lang.Integer">
		select count(1) from post
		where postId = #{postId} and userId = #{userId}
	</select>
	<!-- 收藏 -->
	<insert id="saveCollection">
		insert into postcollection
		(`pcID`,`userID`,`collectionTime`)
		values(#{collec.pcid},#{collec.userid},#{collec.collectiontime});
		update post set collectionnumber = collectionnumber+1
		where postId =
		#{collec.pcid}
	</insert>
	<!-- 验证是否重复点赞 -->
	<select id="checkHasFabulous" resultType="java.lang.Integer">
		select count(1) from
		postfabulous
		WHERE TO_DAYS(`fabuloustime`) = TO_DAYS(NOW())
		and postId = #{postId} and userId = #{userId}
	</select>
	<!-- 点赞 -->
	<select id="saveFabulous">
		insert into
		postfabulous(`userID`,`postID`,`fabulousTime`)
		values(#{fabu.userid},#{fabu.postid},#{fabu.fabuloustime});
		update post
		set fabulousNumber = fabulousNumber+1
		where postId = #{fabu.postid}
	</select>
	<!-- 发布评论 -->
	<insert id="saveComment">
		insert into
		postcomment(`postID`,`commentator`,`pid`,`content`,`reviewTime`)
		values(#{comm.postid},#{comm.commentator},#{comm.pid},#{comm.content},#{comm.reviewtime})
	</insert>
	<!-- 查询最早发帖时间 -->
	<select id="queryLastComment" resultType="postcomment">
		select * from
		postcomment
		where commentator = #{userId}
		order by reviewtime desc
		limit
		0,1
	</select>

	<!-- 查询当天评论次数 -->
	<select id="queryCommentCount" resultType="java.lang.Integer">
		SELECT COUNT(*) FROM
		postcomment
		WHERE TO_DAYS(`reviewtime`) = TO_DAYS(NOW())
		AND commentator
		= #{userId}
	</select>

	<!-- 评论回帖加积分 -->
	<update id="updateCommentJIntegral">
		update user set userIntegral = userIntegral+3
		where
		userId = #{comm.commentator};
		update user set userIntegral =
		userIntegral+1
		where userId = (select userId from post where postId =
		#{comm.postid})
	</update>

	<!-- 删除评论 -->
	<delete id="removeComment">
		DELETE FROM postcomment WHERE pcid = #{pcid};
		DELETE
		FROM postcomment WHERE pid = #{pcid}
	</delete>
	<!-- 查询发帖人 -->
	<select id="queryCommentAtor" resultType="java.lang.Integer">
		select userId from post
		where postId = #{postId}
	</select>
	<!-- 编辑帖子 -->
	<update id="updatePost">
		update post
		<set>
			<if test="post.fmid!=null">
				fmid = #{post.fmid},
			</if>
			<if test="post.title!=null">
				title = #{post.title},
			</if>
			<if test="post.content!=null">
				content = #{post.content},
			</if>
			<if test="post.releasetime!=null">
				releasetime = #{post.releasetime},
			</if>
		</set>
		where postId = #{post.postid} and userId = #{post.userid}
	</update>
	
	<select id="queryUserInfo" resultType="user">
		select * from user
		where userId = #{userId}
	</select>

</mapper>